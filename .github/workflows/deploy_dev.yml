name: Deploy dev

on:
  push:
    branches: 
        - 'dev'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./infrastructure

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Sign into git
        run: |
          cd $GITHUB_WORKSPACE
          git config --global user.email "raphaesl@stud.ntnu.no"
          git config --global user.name "Raphael Token"
          git config --global credential.helper store
          git remote set-url origin "https://${TOKEN}@github.com/raphaelstorm/iacOblig2.git"
        
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create dev
        run: terraform workspace select dev || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Format Terraform Code
        run: terraform fmt -recursive
        working-directory: ${{ env.WORKING_DIR }}

      - name: Commit fmt changes
        uses: devops-infra/action-commit-push@master
        with:
          github_token: "${{ secrets.TOKEN }}"
          add_timestamp: false
          commit_prefix: "[AUTO]"
          commit_message: "Format Terraform code"
          force: false
          target_branch: dev

  deploy_dev:
    needs: format
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create dev
        run: terraform workspace select dev || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply dev
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}