name: Stage and test

on:
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./infrastructure

jobs:
    deploy_stage:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        
        - name: Terraform init
          run: terraform init
          working-directory: ${{ env.WORKING_DIR }}
          
        - name: Terraform workspace select or create stage
          run: terraform workspace select stage || terraform workspace new stage
          working-directory: ${{ env.WORKING_DIR }}
        
        - name: Terraform apply stage
          run: terraform apply -auto-approve
          working-directory: ${{ env.WORKING_DIR }}

        - name: Get Web Endpoint
          id: get_web_endpoint
          run: echo "STAGE_WEB_ENDPOINT=$(terraform output -raw primary_web_endpoint)" 
          working-directory: ${{ env.WORKING_DIR }}
    test_infrastructure:
      needs: deploy_stage
      runs-on: ubuntu-latest
  
      steps:
        - name: Check out code
          uses: actions/checkout@v2
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1

        - name: Initialize Terraform
          run: terraform init
          working-directory: ${{ env.WORKING_DIR }}
  
        - name: Terraform workspace select or create stage
          run: terraform workspace select stage || terraform workspace new stage
          working-directory: ${{ env.WORKING_DIR }}
  
        - name: Validate Terraform Configuration
          run: |
            cd ${{ env.WORKING_DIR }}
            terraform validate
            tflint
          working-directory: ${{ env.WORKING_DIR }}
  
        - name: Run tfsec
          run: tfsec ${{ env.WORKING_DIR }}
  
        - name: Run Checkov
          run: checkov -d ${{ env.WORKING_DIR }}
  
        - name: Run Terrascan
          run: terrascan -t aws -p ${{ env.WORKING_DIR }}
  